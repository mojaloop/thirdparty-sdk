{
  "postThirdpartyRequestsTransactionRequest": {
    "headers": {
      "fspiop-source": "pispA",
      "fspiop-destination": "dfspA"
    },
    "params": {},
    "payload": {
      "transactionRequestId": "7d34f91d-d078-4077-8263-2c047876fcf6",
      "sourceAccountId": "dfspa.alice.1234",
      "consentId": "8e34f91d-d078-4077-8263-2c047876fcf6",
      "payee": {
        "partyIdInfo": {
          "partyIdType": "MSISDN",
          "partyIdentifier": "+44 1234 5678",
          "fspId": "dfspb"
        }
      },
      "payer": {
        "personalInfo": {
          "complexName": {
            "firstName": "Alice",
            "lastName": "K"
          }
        },
        "partyIdInfo": {
          "partyIdType": "MSISDN",
          "partyIdentifier": "+44 8765 4321",
          "fspId": "dfspa"
        }
      },
      "amountType": "SEND",
      "amount": {
        "amount": "100",
        "currency": "USD"
      },
      "transactionType": {
        "scenario": "TRANSFER",
        "initiator": "PAYER",
        "initiatorType": "CONSUMER"
      },
      "expiration": "2020-07-15T22:17:28.985-01:00"
    }
  },
  "postQuotesRequest": {
    "headers": {
      "fspiop-source": "dfspA",
      "fspiop-destination": "dfspB"
    },
    "params": {},
    "payload": {
      "quoteId": "1e8beca7-2f72-4d3b-b775-fc1a6470e1de",
      "transactionId": "c1e7bfc3-f5f5-45d3-a255-6bb3c9e22869",
      "note": "",
      "transactionRequestId": "7d34f91d-d078-4077-8263-2c047876fcf6",
      "payee": {
        "partyIdInfo": {
          "partyIdType": "MSISDN",
          "partyIdentifier": "+44 1234 5678",
          "fspId": "dfspb"
        }
      },
      "payer": {
        "personalInfo": {
          "complexName": {
            "firstName": "Alice",
            "lastName": "K"
          }
        },
        "partyIdInfo": {
          "partyIdType": "MSISDN",
          "partyIdentifier": "+44 8765 4321",
          "fspId": "dfspa"
        }
      },
      "amountType": "SEND",
      "amount": {
        "amount": "100",
        "currency": "USD"
      },
      "transactionType": {
        "scenario": "TRANSFER",
        "initiator": "PAYER",
        "initiatorType": "CONSUMER"
      }
    }
  },
  "accountsRequest": {
    "headers": {
      "fspiop-source": "pispA",
      "fspiop-destination": "dfspA",
      "accept": "application/json"
    },
    "params": {
      "ID": "username1234"
    },
    "payload": {
      "accounts": [
        {
          "accountNickname": "dfspa.user.nickname1",
          "id": "dfspa.username.1234",
          "currency": "ZAR"
        },
        {
          "accountNickname": "dfspa.user.nickname2",
          "id": "dfspa.username.5678",
          "currency": "USD"
        }
      ]
    }
  },
  "accountsRequestError": {
    "headers": {
      "fspiop-source": "pispA",
      "fspiop-destination": "dfspA"
    },
    "params": {
      "ID": "test"
    },
    "payload": {
      "errorInformation": {
        "errorCode": "3200",
        "errorDescription": "Generic ID not found"
      }
    }
  },
  "backendAuthenticateAuthTokenRequest": {
    "headers": {},
    "params": {},
    "payload": {
      "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
      "authToken": "123456"
    }
  },
  "backendAuthenticateAuthTokenResponseValid": {
    "headers": {},
    "params": {},
    "payload": {
      "isValid": true
    }
  },
  "backendAuthenticateAuthTokenResponseInvalid": {
    "headers": {},
    "params": {},
    "payload": {
      "isValid": false
    }
  },
  "inboundConsentsPostRequest": {
    "headers": {},
    "params": {},
    "payload": {
      "consentId": "8e34f91d-d078-4077-8263-2c047876fcf6",
      "consentRequestId": "bbce3ce8-c247-4153-aab1-f89768c93b18",
      "scopes": [
        {
          "accountId": "some-id",
          "actions": [
            "accounts.getBalance",
            "accounts.transfer"
          ]
        }
      ]
    }
  },
  "consentRequestsPost": {
    "headers": {},
    "params": {},
    "payload": {
      "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
      "userId": "dfspa.username",
      "scopes": [
        {
          "accountId": "dfspa.username.1234",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        },
        {
          "accountId": "dfspa.username.5678",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        }
      ],
      "authChannels": [
        "WEB",
        "OTP"
      ],
      "callbackUri": "pisp-app://callback.com"
    },
    "response": {
      "isValid": true,
      "data": {
        "authChannels": [
          "WEB"
        ],
        "authUri": "dfspa.com/authorize?consentRequestId=456"
      }
    },
    "responseOTP": {
      "isValid": true,
      "data": {
        "authChannels": [
          "OTP"
        ]
      }
    },
    "responseError": {
      "isValid": false,
      "data": {},
      "errorInformation": {
        "errorCode": "7204",
        "errorDescription": "FSP does not support any requested scope actions"
      }
    },
    "responseErrorAuthChannel": {
      "data": {
        "authChannels": [
          "TEST"
        ]
      }
    },
    "otpRequest": {
      "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
      "username": "TBD",
      "message": "TBD"
    },
    "otpResponse": {
      "otp": "98765"
    }
  },
  "consentRequestsPut": {
    "headers": {},
    "params": {
      "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
    },
    "payload": {
      "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
      "scopes": [
        {
          "accountId": "dfspa.username.1234",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        },
        {
          "accountId": "dfspa.username.5678",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        }
      ],
      "callbackUri": "pisp-app://callback.com",
      "authUri": "dfspa.com/authorize?consentRequestId=456",
      "authChannels": [
        "WEB"
      ]
    }
  },
  "consentRequestsPutOTP": {
    "headers": {},
    "params": {
      "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
    },
    "payload": {
      "consentRequestId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
      "scopes": [
        {
          "accountId": "dfspa.username.1234",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        },
        {
          "accountId": "dfspa.username.5678",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        }
      ],
      "callbackUri": "pisp-app://callback.com",
      "authChannels": [
        "OTP"
      ]
    }
  },
  "consentRequestsPutError": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "dfspA"
    },
    "params": {
      "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
    },
    "payload": {
      "errorInformation": {
        "errorCode": "7204",
        "errorDescription": "FSP does not support any requested scope actions"
      }
    }
  },
  "getServicesByServiceTypeRequest": {
    "headers": {
      "fspiop-source": "pispA",
      "fspiop-destination": "switch"
    },
    "params": {
      "ServiceType": "THIRD_PARTY_DFSP"
    },
    "payload": {}
  },
  "putServicesByServiceTypeRequest": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "pispA"
    },
    "params": {
      "ServiceType": "THIRD_PARTY_DFSP"
    },
    "payload": {
      "providers": [
        "dfspA",
        "dfspB"
      ]
    }
  },
  "putServicesByServiceTypeRequestError": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "pispA"
    },
    "params": {
      "ServiceType": "THIRD_PARTY_DFSP"
    },
    "payload": {
      "errorInformation": {
        "errorCode": "7201",
        "errorDescription": "No thirdparty enabled FSP found",
        "extensionList": {
          "extension": [
            {
              "key": "test",
              "value": "test"
            }
          ]
        }
      }
    }
  },
  "linkingRequestConsentPostRequest": {
    "headers": {},
    "params": {},
    "payload": {
      "consentRequestId": "bbce3ce8-c247-4153-aab1-f89768c93b18",
      "toParticipantId": "dfspA",
      "accounts": [
        { "accountNickname": "XXXXXXnt", "id": "dfspa.username.1234", "currency": "ZAR" },
        { "accountNickname": "SpeXXXXXXXXnt", "id": "dfspa.username.5678", "currency": "USD" }
      ],
      "actions": ["accounts.getBalance", "accounts.transfer"],
      "userId": "username1234",
      "callbackUri": "pisp-app://callback.com"
    }
  },
  "consentRequestsIDPatchRequest": {
    "headers": {},
    "params": {
      "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
    },
    "payload": {
      "authToken": "123456"
    }
  },
  "linkingRequestConsentIDAuthenticatePatchRequest": {
    "headers": {},
    "params": {
      "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
    },
    "payload": {
      "authToken": "123456"
    }
  },
  "linkingRequestConsentIDPassCredentialPostRequest": {
    "headers": {},
    "params": {
      "ID": "b51ec534-ee48-4575-b6a9-ead2955b8069"
    },
    "payload": {
      "credential": {
        "payload": {
          "id": "credential id: identifier of pair of keys, base64 encoded, min length 59",
          "rawId": "raw credential id: identifier of pair of keys, base64 encoded, min length 59",
          "response": {
            "clientDataJSON": "clientDataJSON-must-not-have-fewer-than-121-characters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
            "attestationObject": "attestationObject-must-not-have-fewer-than-306-characters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."
          },
          "type": "public-key"
        }
      }
    }
  },
  "inboundConsentsVerifiedPatchRequest": {
    "headers": {},
    "params": {
      "ID": "8e34f91d-d078-4077-8263-2c047876fcf6"
    },
    "payload": {
      "credential": {
        "status": "VERIFIED"
      }
    }
  },
  "putConsentsIdRequestError": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "pispA"
    },
    "params": {
      "ID": "520f9165-7be6-4a40-9fc8-b30fcf4f62ab"
    },
    "payload": {
      "errorInformation": {
        "errorCode": "7212",
        "errorDescription": "Signed challenge does not match derived challenge",
        "extensionList": {
          "extension": [
            {
              "key": "test",
              "value": "test"
            }
          ]
        }
      }
    }
  },
  "inboundPutConsentsIdRequestSignedCredential": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "dfspA"
    },
    "params": {
      "ID": "520f9165-7be6-4a40-9fc8-b30fcf4f62ab"
    },
    "payload": {
      "scopes": [
        {
          "accountId": "dfspa.username.1234",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        },
        {
          "accountId": "dfspa.username.5678",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        }
      ],
      "credential": {
        "credentialType": "FIDO",
        "status": "PENDING",
        "payload": {
          "id": "credential id: identifier of pair of keys, base64 encoded, min length 59",
          "rawId": "raw credential id: identifier of pair of keys, base64 encoded, min length 59",
          "response": {
            "clientDataJSON": "clientDataJSON-must-not-have-fewer-than-121-characters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
            "attestationObject": "attestationObject-must-not-have-fewer-than-306-characters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."
          },
          "type": "public-key"
        }
      }
    }
  },
  "inboundPutConsentsIdRequestVerifiedCredential": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "dfspA"
    },
    "params": {
      "ID": "520f9165-7be6-4a40-9fc8-b30fcf4f62ab"
    },
    "payload": {
      "scopes": [
        {
          "accountId": "dfspa.username.1234",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        },
        {
          "accountId": "dfspa.username.5678",
          "actions": [
            "accounts.transfer",
            "accounts.getBalance"
          ]
        }
      ],
      "credential": {
        "credentialType": "FIDO",
        "status": "VERIFIED",
        "payload": {
          "id": "credential id: identifier of pair of keys, base64 encoded, min length 59",
          "rawId": "raw credential id: identifier of pair of keys, base64 encoded, min length 59",
          "response": {
            "clientDataJSON": "clientDataJSON-must-not-have-fewer-than-121-characters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
            "attestationObject": "attestationObject-must-not-have-fewer-than-306-characters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur."
          },
          "type": "public-key"
        }
      }
    }
  },
  "inboundPutParticipantsTypeIdRequest": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "pispA"
    },
    "params": {
      "ID": "520f9165-7be6-4a40-9fc8-b30fcf4f62ab"
    },
    "payload": {
      "fspId": "central-auth"
    }
  },
  "inboundPutParticipantsTypeIdRequestError": {
    "headers": {
      "fspiop-source": "switch",
      "fspiop-destination": "pispA"
    },
    "params": {
      "ID": "520f9165-7be6-4a40-9fc8-b30fcf4f62ab"
    },
    "payload": {
      "errorInformation": {
        "errorCode": "3200",
        "errorDescription": "Generic ID not found",
        "extensionList": {
          "extension": [
            {
              "key": "test",
              "value": "test"
            }
          ]
        }
      }
    }
  }
}
